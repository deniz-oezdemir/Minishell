
**************************************************************
*                          CARE!                             *
*                                                            * 
* This tester doesnt work if ur readline prompt have '\n'    *
*                                                            *
**************************************************************

---------------------------------------------> test [368]
|  CMD: ->echo $SHLVL 'entry value 20'<-
|--------------------------------
|  EXPECTED (BASH OUTP)  |  exit status: (0)
|
|--- STDOUT:
| ->21 entry value 20$<-
|
|--- STDERR:
| -><-
|
|--- COMPARED STR:
| -><-
|--------------------------------
|--->FOUND (MINISHELL OUTP)  |  exit status: (0)
|
|--- STDOUT:
| ->20 entry value 20$<-
|
|--- STDERR:
| -><-
|
---------------------------------------------<

---------------------------------------------> test [369]
|  CMD: ->echo $SHLVL 'entry value 50'<-
|--------------------------------
|  EXPECTED (BASH OUTP)  |  exit status: (0)
|
|--- STDOUT:
| ->51 entry value 50$<-
|
|--- STDERR:
| -><-
|
|--- COMPARED STR:
| -><-
|--------------------------------
|--->FOUND (MINISHELL OUTP)  |  exit status: (0)
|
|--- STDOUT:
| ->50 entry value 50$<-
|
|--- STDERR:
| -><-
|
---------------------------------------------<

---------------------------------------------> test [370]
|  CMD: ->echo $SHLVL 'entry value 99'<-
|--------------------------------
|  EXPECTED (BASH OUTP)  |  exit status: (0)
|
|--- STDOUT:
| ->100 entry value 99$<-
|
|--- STDERR:
| -><-
|
|--- COMPARED STR:
| -><-
|--------------------------------
|--->FOUND (MINISHELL OUTP)  |  exit status: (0)
|
|--- STDOUT:
| ->99 entry value 99$<-
|
|--- STDERR:
| -><-
|
---------------------------------------------<

---------------------------------------------> test [371]
|  CMD: ->echo $SHLVL 'entry value -20'<-
|--------------------------------
|  EXPECTED (BASH OUTP)  |  exit status: (0)
|
|--- STDOUT:
| ->0 entry value -20$<-
|
|--- STDERR:
| -><-
|
|--- COMPARED STR:
| -><-
|--------------------------------
|--->FOUND (MINISHELL OUTP)  |  exit status: (0)
|
|--- STDOUT:
| ->-20 entry value -20$<-
|
|--- STDERR:
| -><-
|
---------------------------------------------<

---------------------------------------------> test [372]
|  CMD: ->echo $SHLVL 'entry value 800'<-
|--------------------------------
|  EXPECTED (BASH OUTP)  |  exit status: (0)
|
|--- STDOUT:
| ->801 entry value 800$<-
|
|--- STDERR:
| -><-
|
|--- COMPARED STR:
| -><-
|--------------------------------
|--->FOUND (MINISHELL OUTP)  |  exit status: (0)
|
|--- STDOUT:
| ->800 entry value 800$<-
|
|--- STDERR:
| -><-
|
---------------------------------------------<

---------------------------------------------> test [373]
|  CMD: ->echo $SHLVL 'entry value 1000'<-
|--------------------------------
|  EXPECTED (BASH OUTP)  |  exit status: (0)
|
|--- STDOUT:
| ->1 entry value 1000$<-
|
|--- STDERR:
| ->bash: warning: shell level (1001) too high, resetting to 1$<-
|
|--- COMPARED STR:
| -> shell level (1001) too high, resetting to 1<-
|--------------------------------
|--->FOUND (MINISHELL OUTP)  |  exit status: (0)
|
|--- STDOUT:
| ->1000 entry value 1000$<-
|
|--- STDERR:
| -><-
|
---------------------------------------------<

---------------------------------------------> test [374]
|  CMD: ->echo $SHLVL 'entry value 5000000'<-
|--------------------------------
|  EXPECTED (BASH OUTP)  |  exit status: (0)
|
|--- STDOUT:
| ->1 entry value 5000000$<-
|
|--- STDERR:
| ->bash: warning: shell level (5000001) too high, resetting to 1$<-
|
|--- COMPARED STR:
| -> shell level (5000001) too high, resetting to 1<-
|--------------------------------
|--->FOUND (MINISHELL OUTP)  |  exit status: (0)
|
|--- STDOUT:
| ->5000000 entry value 5000000$<-
|
|--- STDERR:
| -><-
|
---------------------------------------------<

---------------------------------------------> test [375]
|  CMD: ->echo $SHLVL 'unset SHLVL before ./minishell'<-
|--------------------------------
|  EXPECTED (BASH OUTP)  |  exit status: (0)
|
|--- STDOUT:
| ->1 unset SHLVL before ./minishell$<-
|
|--- STDERR:
| -><-
|
|--- COMPARED STR:
| -><-
|--------------------------------
|--->FOUND (MINISHELL OUTP)  |  exit status: (1)
|
|--- STDOUT:
| -><-
|
|--- STDERR:
| ->=================================================================$
| ==265218==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000003411 at pc 0x00000040cbcc bp 0x7ffebecd7e30 sp 0x7ffebecd7e20$
| READ of size 1 at 0x602000003411 thread T0$
|     #0 0x40cbcb in expand_var /home/denizozd/42-Minishell/expander.c:90$
|     #1 0x40caa7 in expander /home/denizozd/42-Minishell/expander.c:48$
|     #2 0x4092bc in lexer /home/denizozd/42-Minishell/lexer.c:60$
|     #3 0x406c04 in launch_minishell /home/denizozd/42-Minishell/main.c:42$
|     #4 0x406b8c in main /home/denizozd/42-Minishell/main.c:28$
|     #5 0x7001de629d8f in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58$
|     #6 0x7001de629e3f in __libc_start_main_impl ../csu/libc-start.c:392$
|     #7 0x4012b4 in _start (/home/denizozd/42-Minishell/mpanic-main/minishell+0x4012b4)$
| $
| 0x602000003411 is located 0 bytes to the right of 1-byte region [0x602000003410,0x602000003411)$
| allocated by thread T0 here:$
|     #0 0x7001deabf91f in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:69$
|     #1 0x4111a4 in ft_strjoin (/home/denizozd/42-Minishell/mpanic-main/minishell+0x4111a4)$
|     #2 0x40c71b in create_sub_var /home/denizozd/42-Minishell/expand_var_utils.c:102$
|     #3 0x40cefe in expand_var /home/denizozd/42-Minishell/expander.c:108$
|     #4 0x40caa7 in expander /home/denizozd/42-Minishell/expander.c:48$
|     #5 0x4092bc in lexer /home/denizozd/42-Minishell/lexer.c:60$
|     #6 0x406c04 in launch_minishell /home/denizozd/42-Minishell/main.c:42$
|     #7 0x406b8c in main /home/denizozd/42-Minishell/main.c:28$
|     #8 0x7001de629d8f in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58$
| $
| SUMMARY: AddressSanitizer: heap-buffer-overflow /home/denizozd/42-Minishell/expander.c:90 in expand_var$
| Shadow bytes around the buggy address:$
|   0x0c047fff8630: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd$
|   0x0c047fff8640: fa fa fd fd fa fa fd fd fa fa 00 00 fa fa 00 00$
|   0x0c047fff8650: fa fa 00 00 fa fa 00 00 fa fa 05 fa fa fa 00 00$
|   0x0c047fff8660: fa fa 07 fa fa fa 00 00 fa fa 00 00 fa fa 00 00$
|   0x0c047fff8670: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa$
| =>0x0c047fff8680: fa fa[01]fa fa fa 00 00 fa fa fa fa fa fa fa fa$
|   0x0c047fff8690: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa$
|   0x0c047fff86a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa$
|   0x0c047fff86b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa$
|   0x0c047fff86c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa$
|   0x0c047fff86d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa$
| Shadow byte legend (one shadow byte represents 8 application bytes):$
|   Addressable:           00$
|   Partially addressable: 01 02 03 04 05 06 07 $
|   Heap left redzone:       fa$
|   Freed heap region:       fd$
|   Stack left redzone:      f1$
|   Stack mid redzone:       f2$
|   Stack right redzone:     f3$
|   Stack after return:      f5$
|   Stack use after scope:   f8$
|   Global redzone:          f9$
|   Global init order:       f6$
|   Poisoned by user:        f7$
|   Container overflow:      fc$
|   Array cookie:            ac$
|   Intra object redzone:    bb$
|   ASan internal:           fe$
|   Left alloca redzone:     ca$
|   Right alloca redzone:    cb$
| ==265218==ABORTING$<-
|
---------------------------------------------<

---------------------------------------------> test [376]
|  CMD: ->echo $SLVL 'export SHLVL='' before ./minishell'<-
|--------------------------------
|  EXPECTED (BASH OUTP)  |  exit status: (0)
|
|--- STDOUT:
| ->export SHLVL= before ./minishell$<-
|
|--- STDERR:
| -><-
|
|--- COMPARED STR:
| -><-
|--------------------------------
|--->FOUND (MINISHELL OUTP)  |  exit status: (1)
|
|--- STDOUT:
| -><-
|
|--- STDERR:
| ->=================================================================$
| ==265261==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000003451 at pc 0x00000040cbcc bp 0x7ffdfa840d90 sp 0x7ffdfa840d80$
| READ of size 1 at 0x602000003451 thread T0$
|     #0 0x40cbcb in expand_var /home/denizozd/42-Minishell/expander.c:90$
|     #1 0x40caa7 in expander /home/denizozd/42-Minishell/expander.c:48$
|     #2 0x4092bc in lexer /home/denizozd/42-Minishell/lexer.c:60$
|     #3 0x406c04 in launch_minishell /home/denizozd/42-Minishell/main.c:42$
|     #4 0x406b8c in main /home/denizozd/42-Minishell/main.c:28$
|     #5 0x7431dc629d8f in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58$
|     #6 0x7431dc629e3f in __libc_start_main_impl ../csu/libc-start.c:392$
|     #7 0x4012b4 in _start (/home/denizozd/42-Minishell/mpanic-main/minishell+0x4012b4)$
| $
| 0x602000003451 is located 0 bytes to the right of 1-byte region [0x602000003450,0x602000003451)$
| allocated by thread T0 here:$
|     #0 0x7431dcabf91f in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:69$
|     #1 0x4111a4 in ft_strjoin (/home/denizozd/42-Minishell/mpanic-main/minishell+0x4111a4)$
|     #2 0x40c71b in create_sub_var /home/denizozd/42-Minishell/expand_var_utils.c:102$
|     #3 0x40cefe in expand_var /home/denizozd/42-Minishell/expander.c:108$
|     #4 0x40caa7 in expander /home/denizozd/42-Minishell/expander.c:48$
|     #5 0x4092bc in lexer /home/denizozd/42-Minishell/lexer.c:60$
|     #6 0x406c04 in launch_minishell /home/denizozd/42-Minishell/main.c:42$
|     #7 0x406b8c in main /home/denizozd/42-Minishell/main.c:28$
|     #8 0x7431dc629d8f in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58$
| $
| SUMMARY: AddressSanitizer: heap-buffer-overflow /home/denizozd/42-Minishell/expander.c:90 in expand_var$
| Shadow bytes around the buggy address:$
|   0x0c047fff8630: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd$
|   0x0c047fff8640: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd$
|   0x0c047fff8650: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 00 00$
|   0x0c047fff8660: fa fa 05 fa fa fa 00 00 fa fa 06 fa fa fa 00 00$
|   0x0c047fff8670: fa fa 00 00 fa fa 00 00 fa fa fd fa fa fa fd fa$
| =>0x0c047fff8680: fa fa fd fa fa fa fd fa fa fa[01]fa fa fa 00 00$
|   0x0c047fff8690: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa$
|   0x0c047fff86a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa$
|   0x0c047fff86b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa$
|   0x0c047fff86c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa$
|   0x0c047fff86d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa$
| Shadow byte legend (one shadow byte represents 8 application bytes):$
|   Addressable:           00$
|   Partially addressable: 01 02 03 04 05 06 07 $
|   Heap left redzone:       fa$
|   Freed heap region:       fd$
|   Stack left redzone:      f1$
|   Stack mid redzone:       f2$
|   Stack right redzone:     f3$
|   Stack after return:      f5$
|   Stack use after scope:   f8$
|   Global redzone:          f9$
|   Global init order:       f6$
|   Poisoned by user:        f7$
|   Container overflow:      fc$
|   Array cookie:            ac$
|   Intra object redzone:    bb$
|   ASan internal:           fe$
|   Left alloca redzone:     ca$
|   Right alloca redzone:    cb$
| ==265261==ABORTING$<-
|
---------------------------------------------<

